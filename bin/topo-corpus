#!/usr/bin/env python

import sys
import os
import argparse

import json
from bson import json_util

# patch sys.path to fix import errors
PROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.append(PROJECT_DIR)

from topogram.corpus import Corpus

# mysterious bug from stack overflow http://newbebweb.blogspot.fr/2012/02/python-head-ioerror-errno-32-broken.html
from signal import signal, SIGPIPE, SIG_DFL
signal(SIGPIPE,SIG_DFL) 

def main(line):

    return corpus(line)

if __name__ == "__main__":

    # parse command line arguments
    p = argparse.ArgumentParser()

    p.add_argument('--timestamp', '-t', default="created_at", required=True)
    p.add_argument('--time-pattern', '-p', default=None)
    p.add_argument('--origin', '-r', default="user_id")
    p.add_argument('--content', '-c', default="text", required=True)
    p.add_argument('--exclude', '-e', default="ObjectId")
    p.add_argument('--format', '-j', default="json")

    # in/out format with default to stdin / stdout
    p.add_argument('infile', nargs='?', type=argparse.FileType('r'), default=sys.stdin, help='Specifies the intput file.  The default is stdin.')
    p.add_argument('outfile', nargs='?', type=argparse.FileType('w'), default=sys.stdout, help='Specifies the output file.  The default is stdout.')

    # get cli args
    args = p.parse_args(sys.argv[1:])
    # print args

    # parse corpus  
    corpus = Corpus(
                    args.format,
                    content=args.content,
                    origin=args.origin,
                    timestamp=args.timestamp,
                    time_pattern=args.time_pattern
                )

    # make sure everything is processed line by line
    if args.infile is sys.stdin : 
        for line in sys.stdin:
            row = corpus(line)
            if args.outfile is sys.stdout : 
                sys.stdout.write(json.dumps(row, default=json_util.default)+ '\n' )
